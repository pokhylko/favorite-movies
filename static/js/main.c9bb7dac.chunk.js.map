{"version":3,"sources":["images/star-inactive.svg","images/star-active.svg","components/MovieCard/MovieCard.jsx","components/Gallery/Gallery.jsx","images/cancel.svg","components/Favourite/Favourite.jsx","components/Modal/Modal.jsx","api/api.js","App.jsx","index.js"],"names":["MovieCard","movie","favouriteList","changeFavouriteList","getMovie","Title","Year","Poster","imdbID","getMovieById","event","imdbId","preventDefault","className","href","onClick","src","alt","type","includes","starActive","starInactive","defaultProps","Gallery","movies","map","Favourite","length","movieId","find","cancel","Modal","modalMovie","setModalMovie","Runtime","imdbRating","Plot","Genre","Actors","Director","classNames","App","useState","setMovies","setFavouriteList","useEffect","data","state","filter","favouriteId","fetch","then","response","json","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c9bb7dac.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/star-inactive.dd913ac2.svg\";","export default __webpack_public_path__ + \"static/media/star-active.de82f684.svg\";","import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\nimport starInactive from '../../images/star-inactive.svg';\nimport starActive from '../../images/star-active.svg';\n\nexport const MovieCard = ({\n  movie, favouriteList, changeFavouriteList, getMovie,\n}) => {\n  const {\n    Title, Year, Poster, imdbID,\n  } = movie;\n\n  const getMovieById = (event, imdbId) => {\n    event.preventDefault();\n\n    getMovie(imdbId);\n  };\n\n  return (\n    <div className=\"movie-card\">\n      <a\n        className=\"movie-card__poster\"\n        href=\"/#\"\n        onClick={(event) => getMovieById(event, imdbID)}\n      >\n        <img\n          className=\"movie-card__poster-image\"\n          src={Poster}\n          alt={`${Title}'s poster`}\n        />\n      </a>\n      <div className=\"movie-card__content\">\n        <h2 className=\"movie-card__title\">\n          <a\n            className=\"movie-card__title-link\"\n            href=\"/#\"\n            onClick={(event) => getMovieById(event, imdbID)}\n          >\n            {Title}\n          </a>\n        </h2>\n        <h4 className=\"movie-card__year\">{Year}</h4>\n        <button\n          className=\"movie-card__favourite\"\n          type=\"button\"\n          onClick={() => changeFavouriteList(imdbID)}\n        >\n          <img\n            className=\"movie-card__star\"\n            src={favouriteList.includes(imdbID) ? starActive : starInactive}\n            alt=\"icon\"\n          />\n        </button>\n      </div>\n    </div>\n  );\n};\n\nMovieCard.propTypes = {\n  movie: PropTypes.shape({\n    Title: PropTypes.string,\n    imdbID: PropTypes.string,\n    Year: PropTypes.string,\n    Poster: PropTypes.string,\n    Plot: PropTypes.string,\n    Genre: PropTypes.string,\n  }).isRequired,\n  favouriteList: PropTypes.arrayOf(PropTypes.string),\n  changeFavouriteList: PropTypes.func.isRequired,\n  getMovie: PropTypes.func.isRequired,\n};\n\nMovieCard.defaultProps = {\n  favouriteList: [],\n};\n","import React from 'react';\nimport './Gallery.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const Gallery = ({\n  movies, favouriteList, changeFavouriteList, getMovie,\n}) => (\n  <div className=\"gallery\">\n    {movies.map((movie) => (\n      <div\n        className=\"gallery__item\"\n        key={movie.imdbID}\n      >\n        <MovieCard\n          movie={movie}\n          favouriteList={favouriteList}\n          changeFavouriteList={changeFavouriteList}\n          getMovie={getMovie}\n        />\n      </div>\n    ))}\n  </div>\n);\n\nGallery.propTypes = {\n  movies: PropTypes.arrayOf(PropTypes.shape).isRequired,\n  movie: PropTypes.shape({\n    imdbID: PropTypes.string,\n  }),\n  favouriteList: PropTypes.arrayOf(PropTypes.string),\n  changeFavouriteList: PropTypes.func.isRequired,\n  getMovie: PropTypes.func.isRequired,\n};\n\nGallery.defaultProps = {\n  movie: {},\n  favouriteList: [],\n};\n","export default __webpack_public_path__ + \"static/media/cancel.bb8fe364.svg\";","import React from 'react';\nimport './Favourite.scss';\nimport PropTypes from 'prop-types';\nimport starActive from '../../images/star-active.svg';\nimport cancel from '../../images/cancel.svg';\n\nexport const Favourite = ({\n  movies, favouriteList, changeFavouriteList, getMovie,\n}) => {\n  const getMovieById = (event, imdbId) => {\n    event.preventDefault();\n\n    getMovie(imdbId);\n  };\n\n  return (\n    <div className=\"favorite\">\n      <h2 className=\"favorite__title\">\n        <img\n          className=\"favorite__title-icon\"\n          src={starActive}\n          alt=\"star icon\"\n        />\n        Favorite movies\n      </h2>\n\n      <div className=\"favorite__content\">\n        {favouriteList.length === 0\n          ? ('Not selected movies')\n          : (favouriteList.map((movieId) => (\n            <div className=\"favorite__movie\" key={movieId}>\n              <a\n                className=\"favorite__link\"\n                href=\"/#\"\n                onClick={(event) => getMovieById(event, movieId)}\n              >\n                {movies.find((movie) => movie.imdbID === movieId).Title}\n              </a>\n\n              <button\n                className=\"favorite__cancel\"\n                type=\"button\"\n                onClick={() => changeFavouriteList(movieId)}\n              >\n                <img\n                  className=\"favorite__cancel-icon\"\n                  src={cancel}\n                  alt=\"cancel icon\"\n                />\n              </button>\n            </div>\n          )))}\n      </div>\n    </div>\n  );\n};\n\nFavourite.propTypes = {\n  movies: PropTypes.arrayOf(PropTypes.shape).isRequired,\n  favouriteList: PropTypes.arrayOf(PropTypes.string),\n  changeFavouriteList: PropTypes.func.isRequired,\n  getMovie: PropTypes.func.isRequired,\n};\n\nFavourite.defaultProps = {\n  favouriteList: [],\n};\n","import React from 'react';\nimport './Modal.scss';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport cancel from '../../images/cancel.svg';\nimport starInactive from '../../images/star-inactive.svg';\nimport starActive from '../../images/star-active.svg';\n\nexport const Modal = ({\n  modalMovie, setModalMovie, favouriteList, changeFavouriteList,\n}) => {\n  const {\n    Title, Poster, Year, Runtime, imdbRating, Plot, Genre, Actors, Director, imdbID,\n  } = modalMovie;\n\n  return (\n    <div className={classNames(\n      'modal',\n      { 'modal--open': Title },\n    )}\n    >\n      <div className=\"modal__container\">\n        {Title && (\n          <>\n            <div className=\"modal__left\">\n              <img className=\"modal__image\" src={Poster} alt={`Poster ${Title}`} />\n            </div>\n\n            <div className=\"modal__right\">\n              <h3 className=\"modal__title\">{Title}</h3>\n              <div className=\"modal__details\">\n                <button\n                  className=\"modal__favourite\"\n                  type=\"button\"\n                  onClick={() => changeFavouriteList(imdbID)}\n                >\n                  <img\n                    className=\"modal__star\"\n                    src={favouriteList.includes(imdbID) ? starActive : starInactive}\n                    alt=\"icon\"\n                  />\n                </button>\n                <p className=\"modal__year\">{Year}</p>\n                <p className=\"modal__runtime\">{Runtime}</p>\n                <p className=\"genres\">{Genre}</p>\n              </div>\n              <p className=\"modal__plot\">{Plot}</p>\n              <p className=\"modal__director\">{`Director: ${Director}`}</p>\n              <p className=\"modal__starring\">{`Starring: ${Actors}`}</p>\n              <p className=\"modal__rating\">\n                Rating:\n                <span className=\"modal__rating-number\">{imdbRating}</span>\n              </p>\n            </div>\n\n            <button\n              className=\"modal__close\"\n              type=\"button\"\n              onClick={() => setModalMovie({})}\n            >\n              <img\n                className=\"favorite__cancel-icon\"\n                src={cancel}\n                alt=\"cancel icon\"\n              />\n            </button>\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nModal.propTypes = {\n  modalMovie: PropTypes.shape({\n    Title: PropTypes.string,\n    Runtime: PropTypes.string,\n    Year: PropTypes.string,\n    Poster: PropTypes.string,\n    Plot: PropTypes.string,\n    Genre: PropTypes.string,\n    imdbRating: PropTypes.string,\n    Actors: PropTypes.string,\n    Director: PropTypes.string,\n    imdbID: PropTypes.string,\n  }),\n  setModalMovie: PropTypes.func.isRequired,\n  favouriteList: PropTypes.arrayOf(PropTypes.string),\n  changeFavouriteList: PropTypes.func.isRequired,\n};\n\nModal.defaultProps = {\n  modalMovie: {},\n  favouriteList: [],\n};\n","const API_URL = 'https://www.omdbapi.com/';\nconst API_KEY = '91441aae';\n\nexport const getMovieById = (imdbId) => fetch(`${API_URL}?apikey=${API_KEY}&i=${imdbId}`)\n  .then((response) => response.json());\n","import React, { useState, useEffect } from 'react';\nimport './App.scss';\nimport data from './data/movies.json';\n\nimport { Gallery } from './components/Gallery';\nimport { Favourite } from './components/Favourite';\nimport { Modal } from './components/Modal';\nimport { getMovieById } from './api/api';\n\nexport const App = () => {\n  const [movies, setMovies] = useState([]);\n  const [favouriteList, setFavouriteList] = useState([]);\n  const [modalMovie, setModalMovie] = useState({});\n\n  useEffect(() => {\n    setMovies(data);\n  }, []);\n\n  const changeFavouriteList = (imdbId) => {\n    if (favouriteList.includes(imdbId)) {\n      setFavouriteList((state) => state\n        .filter((favouriteId) => favouriteId !== imdbId));\n    } else {\n      setFavouriteList((state) => [...state, imdbId]);\n    }\n  };\n\n  const getMovie = (imdbId) => {\n    getMovieById(imdbId)\n      .then((movie) => setModalMovie(movie));\n  };\n\n  return (\n    <div className=\"wrapper\">\n      <Gallery\n        movies={movies}\n        favouriteList={favouriteList}\n        changeFavouriteList={changeFavouriteList}\n        getMovie={getMovie}\n      />\n      <Favourite\n        movies={movies}\n        favouriteList={favouriteList}\n        changeFavouriteList={changeFavouriteList}\n        getMovie={getMovie}\n      />\n      <Modal\n        modalMovie={modalMovie}\n        setModalMovie={setModalMovie}\n        favouriteList={favouriteList}\n        changeFavouriteList={changeFavouriteList}\n      />\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}